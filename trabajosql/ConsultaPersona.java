/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabajosql;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author noesencillito
 */
public class ConsultaPersona extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConsultaPersona
     */
     Connection conex;
    public ConsultaPersona() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfdni = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfApellido = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonas = new javax.swing.JTable();
        btMostrar = new javax.swing.JButton();
        btBuscar1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btCerrarBD = new javax.swing.JButton();
        btSalir = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btModificar = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        btNombre = new javax.swing.JButton();

        jLabel1.setText("Consulta de personas");

        tfdni.setText("Introduce DNI");
        tfdni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfdniFocusGained(evt);
            }
        });

        jLabel2.setText("DNI");

        jLabel3.setText("Apellido");

        tfApellido.setText("Introduce Apellido");
        tfApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfApellidoFocusGained(evt);
            }
        });
        tfApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfApellidoActionPerformed(evt);
            }
        });

        tblPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombres", "Apellidos", "Fecha de nacimiento", "Sexo"
            }
        ));
        jScrollPane1.setViewportView(tblPersonas);

        btMostrar.setText("Mostrar");
        btMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMostrarActionPerformed(evt);
            }
        });

        btBuscar1.setText("Buscar por DNI");
        btBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscar1ActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar por Apellido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btCerrarBD.setText("Cerrar BD");
        btCerrarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCerrarBDActionPerformed(evt);
            }
        });

        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        jButton4.setText("Limpiar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btModificar.setText("Modificar");
        btModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificarActionPerformed(evt);
            }
        });

        btEliminar.setText("Eliminar");
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre");

        tfNombre.setText("Introduce Nombre");
        tfNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNombreFocusGained(evt);
            }
        });
        tfNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNombreActionPerformed(evt);
            }
        });

        btNombre.setText("Buscar por nombre");
        btNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tfdni, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163)
                        .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel2)
                .addGap(264, 264, 264)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(130, 130, 130))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btEliminar)
                    .addComponent(btModificar)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btMostrar)
                .addGap(18, 18, 18)
                .addComponent(btBuscar1)
                .addGap(18, 18, 18)
                .addComponent(btNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(btCerrarBD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSalir)
                .addGap(133, 133, 133))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(btEliminar)
                                .addGap(18, 18, 18)
                                .addComponent(btModificar)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btMostrar)
                                .addComponent(btBuscar1)
                                .addComponent(btNombre))
                            .addComponent(btSalir)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btCerrarBD)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(245, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMostrarActionPerformed
        try {
            // TODO add your handling code here:

            DefaultTableModel modelo= (DefaultTableModel) tblPersonas.getModel();
            
           conex = DriverManager.getConnection("jdbc:derby://localhost:1527/personas","usuario","1234");
         
           Statement stmt = conex.createStatement();
          
           ResultSet rs = stmt.executeQuery("SELECT * FROM personas");
           
         while(rs.next()){
            String[]fila = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)}; 
            modelo.addRow(fila);
         }
           
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null," No se puede conectar a la base de datos, revise la conexión");  
        }
        
        
    }//GEN-LAST:event_btMostrarActionPerformed

    private void btBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscar1ActionPerformed
        try {
            // TODO add your handling code here:

            DefaultTableModel modelo= (DefaultTableModel) tblPersonas.getModel();
            
           conex = DriverManager.getConnection("jdbc:derby://localhost:1527/personas","usuario","1234");
         
           Statement stmt = conex.createStatement();
          
           ResultSet rs = stmt.executeQuery("SELECT * FROM personas WHERE dni='"+tfdni.getText()+"'");
           
         while(rs.next()){
            String[]fila = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)}; 
            modelo.addRow(fila);
         }
           
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null," No se puede conectar a la base de datos, revise la conexión");  
        }
    }//GEN-LAST:event_btBuscar1ActionPerformed

    private void tfdniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdniFocusGained
        tfdni.setText("");
    }//GEN-LAST:event_tfdniFocusGained

    private void tfApellidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfApellidoFocusGained
        tfApellido.setText("");
    }//GEN-LAST:event_tfApellidoFocusGained

    private void tfApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfApellidoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try {
            // TODO add your handling code here:

            DefaultTableModel modelo= (DefaultTableModel) tblPersonas.getModel();
            
           conex = DriverManager.getConnection("jdbc:derby://localhost:1527/personas","usuario","1234");
         
           Statement stmt = conex.createStatement();
          
           ResultSet rs = stmt.executeQuery("SELECT * FROM personas WHERE apellidos='"+tfApellido.getText()+"'");
           
         while(rs.next()){
            String[]fila = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)}; 
            modelo.addRow(fila);
         }
           
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null," No se puede conectar a la base de datos, revise la conexión");  
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btCerrarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCerrarBDActionPerformed
         try {
             conex.close();
         } catch (SQLException ex) {
             Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_btCerrarBDActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
         System.exit(WIDTH);
    }//GEN-LAST:event_btSalirActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        DefaultTableModel modelo= (DefaultTableModel) tblPersonas.getModel();
        modelo.setRowCount(0);
         
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificarActionPerformed
         try {
             conex = DriverManager.getConnection("jdbc:derby://localhost:1527/personas","usuario","1234");
             
             Statement stmt = conex.createStatement();
             stmt.executeUpdate("UPDATE personas set nombres='"+tfNombre.getText()+"',apellidos='"+tfApellido.getText()+"' where dni='"+tfdni.getText()+"'");
            
         } catch (SQLException ex) {
             Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_btModificarActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
         try {
             conex = DriverManager.getConnection("jdbc:derby://localhost:1527/personas","usuario","1234");
             
             Statement stmt = conex.createStatement();
             stmt.executeUpdate("DELETE FROM personas where dni='" + tfdni.getText() + "'");
            
         } catch (SQLException ex) {
             Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_btEliminarActionPerformed

    private void tfNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNombreActionPerformed
          try {
            // TODO add your handling code here:

            DefaultTableModel modelo= (DefaultTableModel) tblPersonas.getModel();
            
           conex = DriverManager.getConnection("jdbc:derby://localhost:1527/personas","usuario","1234");
         
           Statement stmt = conex.createStatement();
          
           ResultSet rs = stmt.executeQuery("SELECT * FROM personas WHERE nombres='"+tfNombre.getText()+"'");
           
         while(rs.next()){
            String[]fila = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)}; 
            modelo.addRow(fila);
         }
           
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null," No se puede conectar a la base de datos, revise la conexión");  
        }
    }//GEN-LAST:event_tfNombreActionPerformed

    private void tfNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNombreFocusGained
        tfNombre.setText("");
    }//GEN-LAST:event_tfNombreFocusGained

    private void btNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNombreActionPerformed
         try {
            // TODO add your handling code here:

            DefaultTableModel modelo= (DefaultTableModel) tblPersonas.getModel();
            
           conex = DriverManager.getConnection("jdbc:derby://localhost:1527/personas","usuario","1234");
         
           Statement stmt = conex.createStatement();
          
           ResultSet rs = stmt.executeQuery("SELECT * FROM personas WHERE nombres='"+tfNombre.getText()+"'");
           
         while(rs.next()){
            String[]fila = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)}; 
            modelo.addRow(fila);
         }
           
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaPersona.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null," No se puede conectar a la base de datos, revise la conexión");  
        }
    }//GEN-LAST:event_btNombreActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar1;
    private javax.swing.JButton btCerrarBD;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btModificar;
    private javax.swing.JButton btMostrar;
    private javax.swing.JButton btNombre;
    private javax.swing.JButton btSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPersonas;
    private javax.swing.JTextField tfApellido;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfdni;
    // End of variables declaration//GEN-END:variables
}
